// Code generated by MockGen. DO NOT EDIT.
// Source: ../workplaces.go
//
// Generated by this command:
//
//	mockgen -destination workplaces_mock.go -package mock_services -source ../workplaces.go WorkplacesClientInterface
//

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	armoperationalinsights "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/operationalinsights/armoperationalinsights"
	services "github.com/rancher/aks-operator/pkg/aks/services"
	gomock "go.uber.org/mock/gomock"
)

// MockWorkplacesClientInterface is a mock of WorkplacesClientInterface interface.
type MockWorkplacesClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockWorkplacesClientInterfaceMockRecorder
}

// MockWorkplacesClientInterfaceMockRecorder is the mock recorder for MockWorkplacesClientInterface.
type MockWorkplacesClientInterfaceMockRecorder struct {
	mock *MockWorkplacesClientInterface
}

// NewMockWorkplacesClientInterface creates a new mock instance.
func NewMockWorkplacesClientInterface(ctrl *gomock.Controller) *MockWorkplacesClientInterface {
	mock := &MockWorkplacesClientInterface{ctrl: ctrl}
	mock.recorder = &MockWorkplacesClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWorkplacesClientInterface) EXPECT() *MockWorkplacesClientInterfaceMockRecorder {
	return m.recorder
}

// BeginCreateOrUpdate mocks base method.
func (m *MockWorkplacesClientInterface) BeginCreateOrUpdate(ctx context.Context, resourceGroupName, workspaceName string, parameters armoperationalinsights.Workspace, options *armoperationalinsights.WorkspacesClientBeginCreateOrUpdateOptions) (services.Poller[armoperationalinsights.WorkspacesClientCreateOrUpdateResponse], error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BeginCreateOrUpdate", ctx, resourceGroupName, workspaceName, parameters, options)
	ret0, _ := ret[0].(services.Poller[armoperationalinsights.WorkspacesClientCreateOrUpdateResponse])
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BeginCreateOrUpdate indicates an expected call of BeginCreateOrUpdate.
func (mr *MockWorkplacesClientInterfaceMockRecorder) BeginCreateOrUpdate(ctx, resourceGroupName, workspaceName, parameters, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BeginCreateOrUpdate", reflect.TypeOf((*MockWorkplacesClientInterface)(nil).BeginCreateOrUpdate), ctx, resourceGroupName, workspaceName, parameters, options)
}

// Get mocks base method.
func (m *MockWorkplacesClientInterface) Get(ctx context.Context, resourceGroupName, workspaceName string, options *armoperationalinsights.WorkspacesClientGetOptions) (armoperationalinsights.WorkspacesClientGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, resourceGroupName, workspaceName, options)
	ret0, _ := ret[0].(armoperationalinsights.WorkspacesClientGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockWorkplacesClientInterfaceMockRecorder) Get(ctx, resourceGroupName, workspaceName, options any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockWorkplacesClientInterface)(nil).Get), ctx, resourceGroupName, workspaceName, options)
}
